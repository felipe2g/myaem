generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Accounts {
  id                  Int                   @id @default(autoincrement()) @db.UnsignedInt
  name                String                @unique(map: "accounts_unique") @default(cuid()) @db.VarChar(32)
  password            String                @db.Text
  email               String                @unique(map: "accounts_email_unique") @db.VarChar(255)
  premdays            Int                   @default(0)
  lastday             Int                   @default(0) @db.UnsignedInt
  type                Int                   @default(1) @db.UnsignedTinyInt
  coins               Int                   @default(0) @db.UnsignedInt
  coins_transferable  Int                   @default(0) @db.UnsignedInt
  tournament_coins    Int                   @default(0) @db.UnsignedInt
  recruiter           Int?                  @default(0)
  creation            Int                   @default(0)
  premdays_purchased  Int                   @default(0)

  gameAccountSessions GameAccountSessions[]
  players             Players[]

  @@map("accounts")
}

model BoostedBoss {
  looktypeEx Int     @default(0)
  looktype   Int     @default(136)
  lookfeet   Int     @default(0)
  looklegs   Int     @default(0)
  lookhead   Int     @default(0)
  lookbody   Int     @default(0)
  lookaddons Int     @default(0)
  lookmount  Int?    @default(0)
  date       String  @id @default("") @db.VarChar(250)
  boostname  String? @db.Text
  raceid     String  @default("") @db.VarChar(250)

  @@map("boosted_boss")
}

model BoostedCreature {
  looktype   Int     @default(136)
  lookfeet   Int     @default(0)
  looklegs   Int     @default(0)
  lookhead   Int     @default(0)
  lookbody   Int     @default(0)
  lookaddons Int     @default(0)
  lookmount  Int?    @default(0)
  date       String  @id @default("") @db.VarChar(250)
  boostname  String? @db.Text
  raceid     String  @default("") @db.VarChar(250)

  @@map("boosted_creature")
}

model Players {
  id                                                Int                  @id @default(autoincrement())
  name                                              String               @unique(map: "players_unique") @db.VarChar(255)
  group_id                                          Int                  @default(1)
  account_id                                        Int                  @default(0) @db.UnsignedInt
  level                                             Int                  @default(1)
  vocation                                          Int                  @default(0)
  sex                                               Int                  @default(0)
  istutorial                                        Boolean              @default(false)
  lookbody                                          Int                  @default(0)
  lookfeet                                          Int                  @default(0)
  lookhead                                          Int                  @default(0)
  looklegs                                          Int                  @default(0)
  looktype                                          Int                  @default(136)
  lookaddons                                        Int                  @default(0)
  isreward                                          Boolean              @default(true)

  account                                           Accounts             @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "players_account_fk")
  online                                            PlayerOnline?
  
  @@map("players")
}

model PlayerOnline {
  player_id Int     @id
  player    Players @relation(fields: [player_id], references: [id])

  @@map("players_online")
}

model GameAccountSessions {
  id         String   @id @default(cuid())
  account_id Int      @db.UnsignedInt
  expires    BigInt   @db.UnsignedBigInt
  accounts   Accounts @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([account_id], map: "account_sessions_account_id_fkey")
  @@map("account_sessions")
}
